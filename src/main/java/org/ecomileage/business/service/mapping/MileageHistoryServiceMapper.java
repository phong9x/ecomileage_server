/*
 * Created on 25 thg 10 2017 ( Time 10:42:33 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.ecomileage.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.ecomileage.bean.MileageHistory;
import org.ecomileage.bean.jpa.MileageHistoryEntity;
import org.ecomileage.bean.jpa.UserEntity;
import org.ecomileage.bean.jpa.VehicleCodeEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class MileageHistoryServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public MileageHistoryServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'MileageHistoryEntity' to 'MileageHistory'
	 * @param mileageHistoryEntity
	 */
	public MileageHistory mapMileageHistoryEntityToMileageHistory(MileageHistoryEntity mileageHistoryEntity) {
		if(mileageHistoryEntity == null) {
			return null;
		}

		//--- Generic mapping 
		MileageHistory mileageHistory = map(mileageHistoryEntity, MileageHistory.class);

		//--- Link mapping ( link to User )
		if(mileageHistoryEntity.getUser() != null) {
			mileageHistory.setUserId(mileageHistoryEntity.getUser().getId());
		}
		//--- Link mapping ( link to VehicleCode )
		if(mileageHistoryEntity.getVehicleCode() != null) {
			mileageHistory.setVehicleCodeId(mileageHistoryEntity.getVehicleCode().getId());
		}
		return mileageHistory;
	}
	
	/**
	 * Mapping from 'MileageHistory' to 'MileageHistoryEntity'
	 * @param mileageHistory
	 * @param mileageHistoryEntity
	 */
	public void mapMileageHistoryToMileageHistoryEntity(MileageHistory mileageHistory, MileageHistoryEntity mileageHistoryEntity) {
		if(mileageHistory == null) {
			return;
		}

		//--- Generic mapping 
		map(mileageHistory, mileageHistoryEntity);

		//--- Link mapping ( link : mileageHistory )
		if( hasLinkToUser(mileageHistory) ) {
			UserEntity user1 = new UserEntity();
			user1.setId( mileageHistory.getUserId() );
			mileageHistoryEntity.setUser( user1 );
		} else {
			mileageHistoryEntity.setUser( null );
		}

		//--- Link mapping ( link : mileageHistory )
		if( hasLinkToVehicleCode(mileageHistory) ) {
			VehicleCodeEntity vehicleCode2 = new VehicleCodeEntity();
			vehicleCode2.setId( mileageHistory.getVehicleCodeId() );
			mileageHistoryEntity.setVehicleCode( vehicleCode2 );
		} else {
			mileageHistoryEntity.setVehicleCode( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(MileageHistory mileageHistory) {
		if(mileageHistory.getUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that VehicleCode id is valid.
	 * @param VehicleCode VehicleCode
	 * @return boolean
	 */
	private boolean hasLinkToVehicleCode(MileageHistory mileageHistory) {
		if(mileageHistory.getVehicleCodeId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}