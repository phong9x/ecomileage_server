/*
 * Created on 13 thg 12 2017 ( Time 12:02:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.ecomileage.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.ecomileage.bean.SupportBikeCenter;
import org.ecomileage.bean.jpa.SupportBikeCenterEntity;
import org.ecomileage.bean.jpa.UserEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class SupportBikeCenterServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public SupportBikeCenterServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'SupportBikeCenterEntity' to 'SupportBikeCenter'
	 * @param supportBikeCenterEntity
	 */
	public SupportBikeCenter mapSupportBikeCenterEntityToSupportBikeCenter(SupportBikeCenterEntity supportBikeCenterEntity) {
		if(supportBikeCenterEntity == null) {
			return null;
		}

		//--- Generic mapping 
		SupportBikeCenter supportBikeCenter = map(supportBikeCenterEntity, SupportBikeCenter.class);

		//--- Link mapping ( link to User )
		if(supportBikeCenterEntity.getUser() != null) {
			supportBikeCenter.setUserId(supportBikeCenterEntity.getUser().getId());
		}
		return supportBikeCenter;
	}
	
	/**
	 * Mapping from 'SupportBikeCenter' to 'SupportBikeCenterEntity'
	 * @param supportBikeCenter
	 * @param supportBikeCenterEntity
	 */
	public void mapSupportBikeCenterToSupportBikeCenterEntity(SupportBikeCenter supportBikeCenter, SupportBikeCenterEntity supportBikeCenterEntity) {
		if(supportBikeCenter == null) {
			return;
		}

		//--- Generic mapping 
		map(supportBikeCenter, supportBikeCenterEntity);

		//--- Link mapping ( link : supportBikeCenter )
		if( hasLinkToUser(supportBikeCenter) ) {
			UserEntity user1 = new UserEntity();
			user1.setId( supportBikeCenter.getUserId() );
			supportBikeCenterEntity.setUser( user1 );
		} else {
			supportBikeCenterEntity.setUser( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(SupportBikeCenter supportBikeCenter) {
		if(supportBikeCenter.getUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}