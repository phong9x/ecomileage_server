/*
 * Created on 13 thg 12 2017 ( Time 12:02:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.ecomileage.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.ecomileage.bean.User;
import org.ecomileage.bean.jpa.UserEntity;
import org.ecomileage.bean.jpa.UserRoleEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class UserServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public UserServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'UserEntity' to 'User'
	 * @param userEntity
	 */
	public User mapUserEntityToUser(UserEntity userEntity) {
		if(userEntity == null) {
			return null;
		}

		//--- Generic mapping 
		User user = map(userEntity, User.class);

		//--- Link mapping ( link to UserRole )
		if(userEntity.getUserRole() != null) {
			user.setRoleId(userEntity.getUserRole().getId());
		}
		return user;
	}
	
	/**
	 * Mapping from 'User' to 'UserEntity'
	 * @param user
	 * @param userEntity
	 */
	public void mapUserToUserEntity(User user, UserEntity userEntity) {
		if(user == null) {
			return;
		}

		//--- Generic mapping 
		map(user, userEntity);

		//--- Link mapping ( link : user )
		if( hasLinkToUserRole(user) ) {
			UserRoleEntity userRole1 = new UserRoleEntity();
			userRole1.setId( user.getRoleId() );
			userEntity.setUserRole( userRole1 );
		} else {
			userEntity.setUserRole( null );
		}

	}
	
	/**
	 * Verify that UserRole id is valid.
	 * @param UserRole UserRole
	 * @return boolean
	 */
	private boolean hasLinkToUserRole(User user) {
		if(user.getRoleId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}