/*
 * Created on 2 thg 10 2017 ( Time 15:10:01 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.ecomileage.business.service;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.ecomileage.bean.jpa.MileageHistoryEntity;
import org.ecomileage.bean.MileageHistory;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

/**
 * Business Service Interface for entity MileageHistory.
 */
public interface MileageHistoryService { 

	/**
	 * Loads an entity from the database using its Primary Key
	 * @param id
	 * @return entity
	 */
	MileageHistory findById( Integer id  ) ;

	/**
	 * Loads an entity from the database using its Primary Key
	 * @param id
	 * @return entity
	 */
	MileageHistoryEntity findOne( Integer id  ) ;

	/** 
	 * Loads all entities.
	 * @return all entities
	 */
	List<MileageHistory> findAll();
	
	/**
	 * Loads entities in page number.
	 * @return entities
	 */

	Page<MileageHistoryEntity> findAll(Integer page);

	/**
	 * Count all entities
	 * @return Long
	 */
	Long countTotal();
	

	/**
	 * Saves the given entity in the database (create or update)
	 * @param entity
	 * @return entity
	 */
	MileageHistory save(MileageHistory entity);

	/**
	 * Updates the given entity in the database
	 * @param entity
	 * @return
	 */
	MileageHistory update(MileageHistory entity);
	
	MileageHistoryEntity update(MileageHistoryEntity mileageHistory);
	/**
	 * Creates the given entity in the database
	 * @param entity
	 * @return
	 */
	MileageHistory create(MileageHistory entity);
	
	/**
	 * Deletes an entity using its Primary Key
	 * @param id
	 */
	void delete( Integer id );

	Page<MileageHistoryEntity> listPaging(Integer page,Integer size);
	
	Page<MileageHistoryEntity> listPagingHistory(Integer userId, Short[] type, Integer page, Integer size);

	Page<MileageHistoryEntity> filterAdmin( Map<String, Object> params, Integer page, Integer size);
	
	Long countUserJoin_ByYear(Integer year);
	
	Long countUserJoin();
	
	Long countReduceCo2_ByYear(Integer year, Short[] status);
	
	Float countReduceCo2(Short[] status);
	
	Long countApprovalByUserId(Integer userId, Date date);
	
	Long countPointByUserIdAndMonth(Integer userId, Date date);
	
	Float countReduceCo2_ByYearAndUserId(Integer year, Short[] status, Integer userId);
	
	Float countReduceCo2_ByUserId(Short[] status, Integer userId);
	
	Long countPointByUserId(Integer userId, Short[] type);
	
	Long countFavouritePointByUserId(Integer userId);
	
	Long countActiveByUserId(Integer userId, Short[] type);
	
	Float countTotalMileageByUserId(Integer userId, Short[] type);
	
	List<Map<String, Object>> listMileageChart(HashMap<String, Object> params);
	
	List<Map<String, Object>> listPointChart(HashMap<String, Object> params);
	
	List<Map<String, Object>> listActiveNumberChart(HashMap<String, Object> params);
	
	List<Map<String, Object>> listRanking(HashMap<String, Object> params);
	
	 Float countTotalMileage(Short[] type);
	 
	 Float countTotalMileage_ByYearAndUserId(Integer year, Integer userId, Short[] type);
	 
	 Long countReduceCo2();
	 
	 Long getBikePointByUserId(Integer userId);
	 
	 Long getTranferPointByUserId(Integer userId);
	 
	 Long getTotalPointByUserId(Integer userId);
	 
	 Long getPreviousPoint(Integer userId);
}
