/*
 * Created on 6 thg 11 2017 ( Time 16:54:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "team_member"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="team_member")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TeamMemberEntity.countAll", query="SELECT COUNT(x) FROM TeamMemberEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class TeamMemberEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="total_mileage", nullable=false)
    private Integer    totalMileage ;

    @Column(name="total_reduce_CO2", nullable=false)
    private Integer    totalReduceCo2 ;

    @Column(name="total_tree", nullable=false)
    private Integer    totalTree    ;

    @Column(name="is_manager", nullable=false)
    private Boolean    isManager    ;

    @Column(name="status", nullable=false)
    private Short      status       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Column(name="is_delete", nullable=false)
    private Boolean    isDelete     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

	// "groupId" (column "group_id") is not defined by itself because used as FK in a link 
	// "memberId" (column "member_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="group_id", referencedColumnName="id")
    private TeamEntity team        ;

    @ManyToOne
    @JoinColumn(name="member_id", referencedColumnName="id")
    private UserEntity user        ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TeamMemberEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : total_mileage ( INT ) 
    public void setTotalMileage( Integer totalMileage ) {
        this.totalMileage = totalMileage;
    }
    public Integer getTotalMileage() {
        return this.totalMileage;
    }

    //--- DATABASE MAPPING : total_reduce_CO2 ( INT ) 
    public void setTotalReduceCo2( Integer totalReduceCo2 ) {
        this.totalReduceCo2 = totalReduceCo2;
    }
    public Integer getTotalReduceCo2() {
        return this.totalReduceCo2;
    }

    //--- DATABASE MAPPING : total_tree ( INT ) 
    public void setTotalTree( Integer totalTree ) {
        this.totalTree = totalTree;
    }
    public Integer getTotalTree() {
        return this.totalTree;
    }

    //--- DATABASE MAPPING : is_manager ( BIT ) 
    public void setIsManager( Boolean isManager ) {
        this.isManager = isManager;
    }
    public Boolean getIsManager() {
        return this.isManager;
    }

    //--- DATABASE MAPPING : status ( SMALLINT ) 
    public void setStatus( Short status ) {
        this.status = status;
    }
    public Short getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : is_delete ( BIT ) 
    public void setIsDelete( Boolean isDelete ) {
        this.isDelete = isDelete;
    }
    public Boolean getIsDelete() {
        return this.isDelete;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setTeam( TeamEntity team ) {
        this.team = team;
    }
    public TeamEntity getTeam() {
        return this.team;
    }

    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(totalMileage);
        sb.append("|");
        sb.append(totalReduceCo2);
        sb.append("|");
        sb.append(totalTree);
        sb.append("|");
        sb.append(isManager);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(isDelete);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
