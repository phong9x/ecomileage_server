/*
 * Created on 14 thg 11 2017 ( Time 11:24:49 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "setting"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="setting")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="SettingEntity.countAll", query="SELECT COUNT(x) FROM SettingEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class SettingEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="title", length=300)
    private String     title        ;

    @Temporal(TemporalType.DATE)
    @Column(name="start_time")
    private Date       startTime    ;

    @Temporal(TemporalType.DATE)
    @Column(name="end_time")
    private Date       endTime      ;

    @Column(name="bike_point_per_km")
    private Integer    bikePointPerKm ;

    @Column(name="max_mileage_per_day")
    private Float      maxMileagePerDay ;

    @Column(name="max_mileage_per_once")
    private Float      maxMileagePerOnce ;

    @Column(name="max_approval_per_day")
    private Integer    maxApprovalPerDay ;

    @Column(name="approval_date_number")
    private Integer    approvalDateNumber ;

    @Column(name="min_average_speed")
    private Float      minAverageSpeed ;

    @Column(name="max_average_speed")
    private Float      maxAverageSpeed ;

    @Column(name="max_speed")
    private Float      maxSpeed     ;

    @Column(name="problem_point")
    private Integer    problemPoint ;

    @Column(name="max_acceleration")
    private Integer    maxAcceleration ;

    @Column(name="tranfer_point_per_km")
    private Integer    tranferPointPerKm ;

    @Column(name="max_approval_tranfer_per_day")
    private Integer    maxApprovalTranferPerDay ;

    @Column(name="favorite_point_per_km")
    private Integer    favoritePointPerKm ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public SettingEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : title ( VARCHAR ) 
    public void setTitle( String title ) {
        this.title = title;
    }
    public String getTitle() {
        return this.title;
    }

    //--- DATABASE MAPPING : start_time ( DATE ) 
    public void setStartTime( Date startTime ) {
        this.startTime = startTime;
    }
    public Date getStartTime() {
        return this.startTime;
    }

    //--- DATABASE MAPPING : end_time ( DATE ) 
    public void setEndTime( Date endTime ) {
        this.endTime = endTime;
    }
    public Date getEndTime() {
        return this.endTime;
    }

    //--- DATABASE MAPPING : bike_point_per_km ( INT ) 
    public void setBikePointPerKm( Integer bikePointPerKm ) {
        this.bikePointPerKm = bikePointPerKm;
    }
    public Integer getBikePointPerKm() {
        return this.bikePointPerKm;
    }

    //--- DATABASE MAPPING : max_mileage_per_day ( FLOAT ) 
    public void setMaxMileagePerDay( Float maxMileagePerDay ) {
        this.maxMileagePerDay = maxMileagePerDay;
    }
    public Float getMaxMileagePerDay() {
        return this.maxMileagePerDay;
    }

    //--- DATABASE MAPPING : max_mileage_per_once ( FLOAT ) 
    public void setMaxMileagePerOnce( Float maxMileagePerOnce ) {
        this.maxMileagePerOnce = maxMileagePerOnce;
    }
    public Float getMaxMileagePerOnce() {
        return this.maxMileagePerOnce;
    }

    //--- DATABASE MAPPING : max_approval_per_day ( INT ) 
    public void setMaxApprovalPerDay( Integer maxApprovalPerDay ) {
        this.maxApprovalPerDay = maxApprovalPerDay;
    }
    public Integer getMaxApprovalPerDay() {
        return this.maxApprovalPerDay;
    }

    //--- DATABASE MAPPING : approval_date_number ( INT ) 
    public void setApprovalDateNumber( Integer approvalDateNumber ) {
        this.approvalDateNumber = approvalDateNumber;
    }
    public Integer getApprovalDateNumber() {
        return this.approvalDateNumber;
    }

    //--- DATABASE MAPPING : min_average_speed ( FLOAT ) 
    public void setMinAverageSpeed( Float minAverageSpeed ) {
        this.minAverageSpeed = minAverageSpeed;
    }
    public Float getMinAverageSpeed() {
        return this.minAverageSpeed;
    }

    //--- DATABASE MAPPING : max_average_speed ( FLOAT ) 
    public void setMaxAverageSpeed( Float maxAverageSpeed ) {
        this.maxAverageSpeed = maxAverageSpeed;
    }
    public Float getMaxAverageSpeed() {
        return this.maxAverageSpeed;
    }

    //--- DATABASE MAPPING : max_speed ( FLOAT ) 
    public void setMaxSpeed( Float maxSpeed ) {
        this.maxSpeed = maxSpeed;
    }
    public Float getMaxSpeed() {
        return this.maxSpeed;
    }

    //--- DATABASE MAPPING : problem_point ( INT ) 
    public void setProblemPoint( Integer problemPoint ) {
        this.problemPoint = problemPoint;
    }
    public Integer getProblemPoint() {
        return this.problemPoint;
    }

    //--- DATABASE MAPPING : max_acceleration ( INT ) 
    public void setMaxAcceleration( Integer maxAcceleration ) {
        this.maxAcceleration = maxAcceleration;
    }
    public Integer getMaxAcceleration() {
        return this.maxAcceleration;
    }

    //--- DATABASE MAPPING : tranfer_point_per_km ( INT ) 
    public void setTranferPointPerKm( Integer tranferPointPerKm ) {
        this.tranferPointPerKm = tranferPointPerKm;
    }
    public Integer getTranferPointPerKm() {
        return this.tranferPointPerKm;
    }

    //--- DATABASE MAPPING : max_approval_tranfer_per_day ( INT ) 
    public void setMaxApprovalTranferPerDay( Integer maxApprovalTranferPerDay ) {
        this.maxApprovalTranferPerDay = maxApprovalTranferPerDay;
    }
    public Integer getMaxApprovalTranferPerDay() {
        return this.maxApprovalTranferPerDay;
    }

    //--- DATABASE MAPPING : favorite_point_per_km ( INT ) 
    public void setFavoritePointPerKm( Integer favoritePointPerKm ) {
        this.favoritePointPerKm = favoritePointPerKm;
    }
    public Integer getFavoritePointPerKm() {
        return this.favoritePointPerKm;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(title);
        sb.append("|");
        sb.append(startTime);
        sb.append("|");
        sb.append(endTime);
        sb.append("|");
        sb.append(bikePointPerKm);
        sb.append("|");
        sb.append(maxMileagePerDay);
        sb.append("|");
        sb.append(maxMileagePerOnce);
        sb.append("|");
        sb.append(maxApprovalPerDay);
        sb.append("|");
        sb.append(approvalDateNumber);
        sb.append("|");
        sb.append(minAverageSpeed);
        sb.append("|");
        sb.append(maxAverageSpeed);
        sb.append("|");
        sb.append(maxSpeed);
        sb.append("|");
        sb.append(problemPoint);
        sb.append("|");
        sb.append(maxAcceleration);
        sb.append("|");
        sb.append(tranferPointPerKm);
        sb.append("|");
        sb.append(maxApprovalTranferPerDay);
        sb.append("|");
        sb.append(favoritePointPerKm);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(createDate);
        return sb.toString(); 
    } 

}
