/*
 * Created on 6 thg 11 2017 ( Time 12:16:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "team"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="team")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TeamEntity.countAll", query="SELECT COUNT(x) FROM TeamEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class TeamEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", length=300)
    private String     name         ;

    @Column(name="total_mileage", nullable=false)
    private Float      totalMileage ;

    @Column(name="total_reduce_co2", nullable=false)
    private Float      totalReduceCo2 ;

    @Column(name="total_tree", nullable=false)
    private Integer    totalTree    ;

    @Column(name="suggesting_manager")
    private Boolean    suggestingManager ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="delete_date")
    private Date       deleteDate   ;

    @Column(name="is_delete", nullable=false)
    private Boolean    isDelete     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Column(name="image_name", length=300)
    private String     imageName    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

    @Column(name="image_url", length=300)
    private String     imageUrl     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="team", targetEntity=TeamMemberEntity.class)
    private List<TeamMemberEntity> listOfTeamMember;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TeamEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : total_mileage ( FLOAT ) 
    public void setTotalMileage( Float totalMileage ) {
        this.totalMileage = totalMileage;
    }
    public Float getTotalMileage() {
        return this.totalMileage;
    }

    //--- DATABASE MAPPING : total_reduce_co2 ( FLOAT ) 
    public void setTotalReduceCo2( Float totalReduceCo2 ) {
        this.totalReduceCo2 = totalReduceCo2;
    }
    public Float getTotalReduceCo2() {
        return this.totalReduceCo2;
    }

    //--- DATABASE MAPPING : total_tree ( INT ) 
    public void setTotalTree( Integer totalTree ) {
        this.totalTree = totalTree;
    }
    public Integer getTotalTree() {
        return this.totalTree;
    }

    //--- DATABASE MAPPING : suggesting_manager ( BIT ) 
    public void setSuggestingManager( Boolean suggestingManager ) {
        this.suggestingManager = suggestingManager;
    }
    public Boolean getSuggestingManager() {
        return this.suggestingManager;
    }

    //--- DATABASE MAPPING : delete_date ( DATETIME ) 
    public void setDeleteDate( Date deleteDate ) {
        this.deleteDate = deleteDate;
    }
    public Date getDeleteDate() {
        return this.deleteDate;
    }

    //--- DATABASE MAPPING : is_delete ( BIT ) 
    public void setIsDelete( Boolean isDelete ) {
        this.isDelete = isDelete;
    }
    public Boolean getIsDelete() {
        return this.isDelete;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : image_name ( VARCHAR ) 
    public void setImageName( String imageName ) {
        this.imageName = imageName;
    }
    public String getImageName() {
        return this.imageName;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : image_url ( VARCHAR ) 
    public void setImageUrl( String imageUrl ) {
        this.imageUrl = imageUrl;
    }
    public String getImageUrl() {
        return this.imageUrl;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfTeamMember( List<TeamMemberEntity> listOfTeamMember ) {
        this.listOfTeamMember = listOfTeamMember;
    }
    public List<TeamMemberEntity> getListOfTeamMember() {
        return this.listOfTeamMember;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(totalMileage);
        sb.append("|");
        sb.append(totalReduceCo2);
        sb.append("|");
        sb.append(totalTree);
        sb.append("|");
        sb.append(suggestingManager);
        sb.append("|");
        sb.append(deleteDate);
        sb.append("|");
        sb.append(isDelete);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(imageName);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(imageUrl);
        return sb.toString(); 
    } 

}
