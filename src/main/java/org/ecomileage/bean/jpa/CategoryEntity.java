/*
 * Created on 8 thg 12 2017 ( Time 14:25:17 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "category"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="category")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CategoryEntity.countAll", query="SELECT COUNT(x) FROM CategoryEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class CategoryEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="group_id", nullable=false)
    private Short      groupId      ;

    @Column(name="name", nullable=false, length=100)
    private String     name         ;

    @Column(name="decription", length=100)
    private String     decription   ;

    @Column(name="group_name", length=100)
    private String     groupName    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="category", targetEntity=ReportEntity.class)
    private List<ReportEntity> listOfReport;

	@JsonIgnore
    @OneToMany(mappedBy="category3", targetEntity=SponsorEntity.class)
    private List<SponsorEntity> listOfSponsor3;

	@JsonIgnore
    @OneToMany(mappedBy="category", targetEntity=MileageApplyEntity.class)
    private List<MileageApplyEntity> listOfMileageApply;

	@JsonIgnore
    @OneToMany(mappedBy="category2", targetEntity=SponsorEntity.class)
    private List<SponsorEntity> listOfSponsor2;

	@JsonIgnore
    @OneToMany(mappedBy="category", targetEntity=SponsorEntity.class)
    private List<SponsorEntity> listOfSponsor;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CategoryEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : group_id ( SMALLINT ) 
    public void setGroupId( Short groupId ) {
        this.groupId = groupId;
    }
    public Short getGroupId() {
        return this.groupId;
    }

    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : decription ( VARCHAR ) 
    public void setDecription( String decription ) {
        this.decription = decription;
    }
    public String getDecription() {
        return this.decription;
    }

    //--- DATABASE MAPPING : group_name ( VARCHAR ) 
    public void setGroupName( String groupName ) {
        this.groupName = groupName;
    }
    public String getGroupName() {
        return this.groupName;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfReport( List<ReportEntity> listOfReport ) {
        this.listOfReport = listOfReport;
    }
    public List<ReportEntity> getListOfReport() {
        return this.listOfReport;
    }

    public void setListOfSponsor3( List<SponsorEntity> listOfSponsor3 ) {
        this.listOfSponsor3 = listOfSponsor3;
    }
    public List<SponsorEntity> getListOfSponsor3() {
        return this.listOfSponsor3;
    }

    public void setListOfMileageApply( List<MileageApplyEntity> listOfMileageApply ) {
        this.listOfMileageApply = listOfMileageApply;
    }
    public List<MileageApplyEntity> getListOfMileageApply() {
        return this.listOfMileageApply;
    }

    public void setListOfSponsor2( List<SponsorEntity> listOfSponsor2 ) {
        this.listOfSponsor2 = listOfSponsor2;
    }
    public List<SponsorEntity> getListOfSponsor2() {
        return this.listOfSponsor2;
    }

    public void setListOfSponsor( List<SponsorEntity> listOfSponsor ) {
        this.listOfSponsor = listOfSponsor;
    }
    public List<SponsorEntity> getListOfSponsor() {
        return this.listOfSponsor;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(groupId);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(decription);
        sb.append("|");
        sb.append(groupName);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
