/*
 * Created on 2 thg 10 2017 ( Time 15:10:02 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "user_setting"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user_setting")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserSettingEntity.countAll", query="SELECT COUNT(x) FROM UserSettingEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class UserSettingEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="certificate_bike_type", nullable=false)
    private Short      certificateBikeType ;

    @Column(name="certificate_tranfer_type", nullable=false)
    private Short      certificateTranferType ;

    @Column(name="certificate_tranfer_wifi", nullable=false)
    private Boolean    certificateTranferWifi ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserSettingEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : certificate_bike_type ( SMALLINT ) 
    public void setCertificateBikeType( Short certificateBikeType ) {
        this.certificateBikeType = certificateBikeType;
    }
    public Short getCertificateBikeType() {
        return this.certificateBikeType;
    }

    //--- DATABASE MAPPING : certificate_tranfer_type ( SMALLINT ) 
    public void setCertificateTranferType( Short certificateTranferType ) {
        this.certificateTranferType = certificateTranferType;
    }
    public Short getCertificateTranferType() {
        return this.certificateTranferType;
    }

    //--- DATABASE MAPPING : certificate_tranfer_wifi ( BIT ) 
    public void setCertificateTranferWifi( Boolean certificateTranferWifi ) {
        this.certificateTranferWifi = certificateTranferWifi;
    }
    public Boolean getCertificateTranferWifi() {
        return this.certificateTranferWifi;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(certificateBikeType);
        sb.append("|");
        sb.append(certificateTranferType);
        sb.append("|");
        sb.append(certificateTranferWifi);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
