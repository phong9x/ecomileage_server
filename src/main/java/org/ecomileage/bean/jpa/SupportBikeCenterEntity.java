/*
 * Created on 13 thg 12 2017 ( Time 17:11:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "support_bike_center"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="support_bike_center")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="SupportBikeCenterEntity.countAll", query="SELECT COUNT(x) FROM SupportBikeCenterEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class SupportBikeCenterEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="latitude")
    private Double     latitude     ;

    @Column(name="longitude")
    private Double     longitude    ;

    @Column(name="lat_city")
    private Double     latCity      ;

    @Column(name="long_city")
    private Double     longCity     ;

    @Column(name="lat_district")
    private Double     latDistrict  ;

    @Column(name="long_district")
    private Double     longDistrict ;

    @Column(name="type", nullable=false)
    private Short      type         ;

    @Column(name="city", length=100)
    private String     city         ;

    @Column(name="post_code", length=50)
    private String     postCode     ;

    @Column(name="district", length=100)
    private String     district     ;

    @Column(name="name", length=100)
    private String     name         ;

    @Column(name="trademark", length=200)
    private String     trademark    ;

    @Column(name="homepage", length=500)
    private String     homepage     ;

    @Column(name="address", length=300)
    private String     address      ;

    @Column(name="phone", length=100)
    private String     phone        ;

    @Column(name="open_time", length=100)
    private String     openTime     ;

    @Column(name="total_bike_parking", nullable=false)
    private Integer    totalBikeParking ;

    @Column(name="close_time", length=100)
    private String     closeTime    ;

    @Column(name="total_bike_parking_fact", nullable=false)
    private Integer    totalBikeParkingFact ;

    @Column(name="fee_rental", length=200)
    private String     feeRental    ;

    @Column(name="total_doors", nullable=false)
    private Integer    totalDoors   ;

    @Column(name="source_information", length=100)
    private String     sourceInformation ;

    @Column(name="pump_bike", nullable=false)
    private Integer    pumpBike     ;

    @Column(name="subname", length=300)
    private String     subname      ;

    @Temporal(TemporalType.DATE)
    @Column(name="provide_information_date")
    private Date       provideInformationDate ;

    @Column(name="image_url", length=500)
    private String     imageUrl     ;

    @Column(name="image_name", length=300)
    private String     imageName    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

	// "userId" (column "user_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="user_id", referencedColumnName="id")
    private UserEntity user        ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public SupportBikeCenterEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : latitude ( DOUBLE ) 
    public void setLatitude( Double latitude ) {
        this.latitude = latitude;
    }
    public Double getLatitude() {
        return this.latitude;
    }

    //--- DATABASE MAPPING : longitude ( DOUBLE ) 
    public void setLongitude( Double longitude ) {
        this.longitude = longitude;
    }
    public Double getLongitude() {
        return this.longitude;
    }

    //--- DATABASE MAPPING : lat_city ( DOUBLE ) 
    public void setLatCity( Double latCity ) {
        this.latCity = latCity;
    }
    public Double getLatCity() {
        return this.latCity;
    }

    //--- DATABASE MAPPING : long_city ( DOUBLE ) 
    public void setLongCity( Double longCity ) {
        this.longCity = longCity;
    }
    public Double getLongCity() {
        return this.longCity;
    }

    //--- DATABASE MAPPING : lat_district ( DOUBLE ) 
    public void setLatDistrict( Double latDistrict ) {
        this.latDistrict = latDistrict;
    }
    public Double getLatDistrict() {
        return this.latDistrict;
    }

    //--- DATABASE MAPPING : long_district ( DOUBLE ) 
    public void setLongDistrict( Double longDistrict ) {
        this.longDistrict = longDistrict;
    }
    public Double getLongDistrict() {
        return this.longDistrict;
    }

    //--- DATABASE MAPPING : type ( SMALLINT ) 
    public void setType( Short type ) {
        this.type = type;
    }
    public Short getType() {
        return this.type;
    }

    //--- DATABASE MAPPING : city ( VARCHAR ) 
    public void setCity( String city ) {
        this.city = city;
    }
    public String getCity() {
        return this.city;
    }

    //--- DATABASE MAPPING : post_code ( VARCHAR ) 
    public void setPostCode( String postCode ) {
        this.postCode = postCode;
    }
    public String getPostCode() {
        return this.postCode;
    }

    //--- DATABASE MAPPING : district ( VARCHAR ) 
    public void setDistrict( String district ) {
        this.district = district;
    }
    public String getDistrict() {
        return this.district;
    }

    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : trademark ( VARCHAR ) 
    public void setTrademark( String trademark ) {
        this.trademark = trademark;
    }
    public String getTrademark() {
        return this.trademark;
    }

    //--- DATABASE MAPPING : homepage ( VARCHAR ) 
    public void setHomepage( String homepage ) {
        this.homepage = homepage;
    }
    public String getHomepage() {
        return this.homepage;
    }

    //--- DATABASE MAPPING : address ( VARCHAR ) 
    public void setAddress( String address ) {
        this.address = address;
    }
    public String getAddress() {
        return this.address;
    }

    //--- DATABASE MAPPING : phone ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }

    //--- DATABASE MAPPING : open_time ( VARCHAR ) 
    public void setOpenTime( String openTime ) {
        this.openTime = openTime;
    }
    public String getOpenTime() {
        return this.openTime;
    }

    //--- DATABASE MAPPING : total_bike_parking ( INT ) 
    public void setTotalBikeParking( Integer totalBikeParking ) {
        this.totalBikeParking = totalBikeParking;
    }
    public Integer getTotalBikeParking() {
        return this.totalBikeParking;
    }

    //--- DATABASE MAPPING : close_time ( VARCHAR ) 
    public void setCloseTime( String closeTime ) {
        this.closeTime = closeTime;
    }
    public String getCloseTime() {
        return this.closeTime;
    }

    //--- DATABASE MAPPING : total_bike_parking_fact ( INT ) 
    public void setTotalBikeParkingFact( Integer totalBikeParkingFact ) {
        this.totalBikeParkingFact = totalBikeParkingFact;
    }
    public Integer getTotalBikeParkingFact() {
        return this.totalBikeParkingFact;
    }

    //--- DATABASE MAPPING : fee_rental ( VARCHAR ) 
    public void setFeeRental( String feeRental ) {
        this.feeRental = feeRental;
    }
    public String getFeeRental() {
        return this.feeRental;
    }

    //--- DATABASE MAPPING : total_doors ( INT ) 
    public void setTotalDoors( Integer totalDoors ) {
        this.totalDoors = totalDoors;
    }
    public Integer getTotalDoors() {
        return this.totalDoors;
    }

    //--- DATABASE MAPPING : source_information ( VARCHAR ) 
    public void setSourceInformation( String sourceInformation ) {
        this.sourceInformation = sourceInformation;
    }
    public String getSourceInformation() {
        return this.sourceInformation;
    }

    //--- DATABASE MAPPING : pump_bike ( INT ) 
    public void setPumpBike( Integer pumpBike ) {
        this.pumpBike = pumpBike;
    }
    public Integer getPumpBike() {
        return this.pumpBike;
    }

    //--- DATABASE MAPPING : subname ( VARCHAR ) 
    public void setSubname( String subname ) {
        this.subname = subname;
    }
    public String getSubname() {
        return this.subname;
    }

    //--- DATABASE MAPPING : provide_information_date ( DATE ) 
    public void setProvideInformationDate( Date provideInformationDate ) {
        this.provideInformationDate = provideInformationDate;
    }
    public Date getProvideInformationDate() {
        return this.provideInformationDate;
    }

    //--- DATABASE MAPPING : image_url ( VARCHAR ) 
    public void setImageUrl( String imageUrl ) {
        this.imageUrl = imageUrl;
    }
    public String getImageUrl() {
        return this.imageUrl;
    }

    //--- DATABASE MAPPING : image_name ( VARCHAR ) 
    public void setImageName( String imageName ) {
        this.imageName = imageName;
    }
    public String getImageName() {
        return this.imageName;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(latitude);
        sb.append("|");
        sb.append(longitude);
        sb.append("|");
        sb.append(latCity);
        sb.append("|");
        sb.append(longCity);
        sb.append("|");
        sb.append(latDistrict);
        sb.append("|");
        sb.append(longDistrict);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(city);
        sb.append("|");
        sb.append(postCode);
        sb.append("|");
        sb.append(district);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(trademark);
        sb.append("|");
        sb.append(homepage);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(openTime);
        sb.append("|");
        sb.append(totalBikeParking);
        sb.append("|");
        sb.append(closeTime);
        sb.append("|");
        sb.append(totalBikeParkingFact);
        sb.append("|");
        sb.append(feeRental);
        sb.append("|");
        sb.append(totalDoors);
        sb.append("|");
        sb.append(sourceInformation);
        sb.append("|");
        sb.append(pumpBike);
        sb.append("|");
        sb.append(subname);
        sb.append("|");
        sb.append(provideInformationDate);
        sb.append("|");
        sb.append(imageUrl);
        sb.append("|");
        sb.append(imageName);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
