/*
 * Created on 18 thg 12 2017 ( Time 11:22:32 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "mileage_apply"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="mileage_apply")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="MileageApplyEntity.countAll", query="SELECT COUNT(x) FROM MileageApplyEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class MileageApplyEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="point_use")
    private Integer    pointUse     ;

    @Column(name="register_item", length=300)
    private String     registerItem ;

    @Column(name="post_code", length=20)
    private String     postCode     ;

    @Column(name="address", length=300)
    private String     address      ;

    @Column(name="address_detail", length=300)
    private String     addressDetail ;

    @Column(name="gender")
    private Boolean    gender       ;

    @Column(name="age", length=50)
    private String     age          ;

    @Column(name="job", length=100)
    private String     job          ;

    @Column(name="phone", length=20)
    private String     phone        ;

    @Column(name="type")
    private Short      type         ;

    @Column(name="memo", length=300)
    private String     memo         ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

    @Column(name="status", nullable=false)
    private Short      status       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Column(name="type_send")
    private Short      typeSend     ;

    @Column(name="coupon_no", length=100)
    private String     couponNo     ;

    @Temporal(TemporalType.DATE)
    @Column(name="expired_coupon_time")
    private Date       expiredCouponTime ;

    @Temporal(TemporalType.DATE)
    @Column(name="send_coupon_time")
    private Date       sendCouponTime ;

	// "userId" (column "user_id") is not defined by itself because used as FK in a link 
	// "giftId" (column "gift_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="user_id", referencedColumnName="id")
    private UserEntity user        ;

    @ManyToOne
    @JoinColumn(name="gift_id", referencedColumnName="id")
    private CategoryEntity category    ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public MileageApplyEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : point_use ( INT ) 
    public void setPointUse( Integer pointUse ) {
        this.pointUse = pointUse;
    }
    public Integer getPointUse() {
        return this.pointUse;
    }

    //--- DATABASE MAPPING : register_item ( VARCHAR ) 
    public void setRegisterItem( String registerItem ) {
        this.registerItem = registerItem;
    }
    public String getRegisterItem() {
        return this.registerItem;
    }

    //--- DATABASE MAPPING : post_code ( VARCHAR ) 
    public void setPostCode( String postCode ) {
        this.postCode = postCode;
    }
    public String getPostCode() {
        return this.postCode;
    }

    //--- DATABASE MAPPING : address ( VARCHAR ) 
    public void setAddress( String address ) {
        this.address = address;
    }
    public String getAddress() {
        return this.address;
    }

    //--- DATABASE MAPPING : address_detail ( VARCHAR ) 
    public void setAddressDetail( String addressDetail ) {
        this.addressDetail = addressDetail;
    }
    public String getAddressDetail() {
        return this.addressDetail;
    }

    //--- DATABASE MAPPING : gender ( BIT ) 
    public void setGender( Boolean gender ) {
        this.gender = gender;
    }
    public Boolean getGender() {
        return this.gender;
    }

    //--- DATABASE MAPPING : age ( VARCHAR ) 
    public void setAge( String age ) {
        this.age = age;
    }
    public String getAge() {
        return this.age;
    }

    //--- DATABASE MAPPING : job ( VARCHAR ) 
    public void setJob( String job ) {
        this.job = job;
    }
    public String getJob() {
        return this.job;
    }

    //--- DATABASE MAPPING : phone ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }

    //--- DATABASE MAPPING : type ( SMALLINT ) 
    public void setType( Short type ) {
        this.type = type;
    }
    public Short getType() {
        return this.type;
    }

    //--- DATABASE MAPPING : memo ( VARCHAR ) 
    public void setMemo( String memo ) {
        this.memo = memo;
    }
    public String getMemo() {
        return this.memo;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : status ( SMALLINT ) 
    public void setStatus( Short status ) {
        this.status = status;
    }
    public Short getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : type_send ( SMALLINT ) 
    public void setTypeSend( Short typeSend ) {
        this.typeSend = typeSend;
    }
    public Short getTypeSend() {
        return this.typeSend;
    }

    //--- DATABASE MAPPING : coupon_no ( VARCHAR ) 
    public void setCouponNo( String couponNo ) {
        this.couponNo = couponNo;
    }
    public String getCouponNo() {
        return this.couponNo;
    }

    //--- DATABASE MAPPING : expired_coupon_time ( DATE ) 
    public void setExpiredCouponTime( Date expiredCouponTime ) {
        this.expiredCouponTime = expiredCouponTime;
    }
    public Date getExpiredCouponTime() {
        return this.expiredCouponTime;
    }

    //--- DATABASE MAPPING : send_coupon_time ( DATE ) 
    public void setSendCouponTime( Date sendCouponTime ) {
        this.sendCouponTime = sendCouponTime;
    }
    public Date getSendCouponTime() {
        return this.sendCouponTime;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }

    public void setCategory( CategoryEntity category ) {
        this.category = category;
    }
    public CategoryEntity getCategory() {
        return this.category;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(pointUse);
        sb.append("|");
        sb.append(registerItem);
        sb.append("|");
        sb.append(postCode);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(addressDetail);
        sb.append("|");
        sb.append(gender);
        sb.append("|");
        sb.append(age);
        sb.append("|");
        sb.append(job);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(memo);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(typeSend);
        sb.append("|");
        sb.append(couponNo);
        sb.append("|");
        sb.append(expiredCouponTime);
        sb.append("|");
        sb.append(sendCouponTime);
        return sb.toString(); 
    } 

}
