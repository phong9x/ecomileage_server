/*
 * Created on 7 thg 12 2017 ( Time 10:30:53 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "vehicle_code"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="vehicle_code")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="VehicleCodeEntity.countAll", query="SELECT COUNT(x) FROM VehicleCodeEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class VehicleCodeEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="serial_number", length=50)
    private String     serialNumber ;

    @Column(name="bus_company_name", length=200)
    private String     busCompanyName ;

    @Column(name="bus_no", length=50)
    private String     busNo        ;

    @Column(name="bus_number", length=50)
    private String     busNumber    ;

    @Column(name="subway_line_no", length=50)
    private String     subwayLineNo ;

    @Column(name="subway_station_name", length=200)
    private String     subwayStationName ;

    @Column(name="subway_direction", length=200)
    private String     subwayDirection ;

    @Column(name="subway_door_no", length=100)
    private String     subwayDoorNo ;

    @Column(name="location", length=200)
    private String     location     ;

    @Column(name="phone", length=20)
    private String     phone        ;

    @Column(name="post_code", length=20)
    private String     postCode     ;

    @Column(name="status")
    private Short      status       ;

    @Column(name="type_vehicle", nullable=false)
    private Short      typeVehicle  ;

    @Column(name="type_send")
    private Short      typeSend     ;

    @Column(name="type_register", nullable=false)
    private Short      typeRegister ;

    @Column(name="type_certificate")
    private Short      typeCertificate ;

    @Column(name="image_name", length=500)
    private String     imageName    ;

    @Column(name="image_url", length=500)
    private String     imageUrl     ;

    @Temporal(TemporalType.DATE)
    @Column(name="register_date")
    private Date       registerDate ;

    @Temporal(TemporalType.DATE)
    @Column(name="approval_date")
    private Date       approvalDate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

    @Column(name="reason", length=500)
    private String     reason       ;

	// "userId" (column "user_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="vehicleCode", targetEntity=MileageHistoryEntity.class)
    private List<MileageHistoryEntity> listOfMileageHistory;

    @ManyToOne
    @JoinColumn(name="user_id", referencedColumnName="id")
    private UserEntity user        ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public VehicleCodeEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : serial_number ( VARCHAR ) 
    public void setSerialNumber( String serialNumber ) {
        this.serialNumber = serialNumber;
    }
    public String getSerialNumber() {
        return this.serialNumber;
    }

    //--- DATABASE MAPPING : bus_company_name ( VARCHAR ) 
    public void setBusCompanyName( String busCompanyName ) {
        this.busCompanyName = busCompanyName;
    }
    public String getBusCompanyName() {
        return this.busCompanyName;
    }

    //--- DATABASE MAPPING : bus_no ( VARCHAR ) 
    public void setBusNo( String busNo ) {
        this.busNo = busNo;
    }
    public String getBusNo() {
        return this.busNo;
    }

    //--- DATABASE MAPPING : bus_number ( VARCHAR ) 
    public void setBusNumber( String busNumber ) {
        this.busNumber = busNumber;
    }
    public String getBusNumber() {
        return this.busNumber;
    }

    //--- DATABASE MAPPING : subway_line_no ( VARCHAR ) 
    public void setSubwayLineNo( String subwayLineNo ) {
        this.subwayLineNo = subwayLineNo;
    }
    public String getSubwayLineNo() {
        return this.subwayLineNo;
    }

    //--- DATABASE MAPPING : subway_station_name ( VARCHAR ) 
    public void setSubwayStationName( String subwayStationName ) {
        this.subwayStationName = subwayStationName;
    }
    public String getSubwayStationName() {
        return this.subwayStationName;
    }

    //--- DATABASE MAPPING : subway_direction ( VARCHAR ) 
    public void setSubwayDirection( String subwayDirection ) {
        this.subwayDirection = subwayDirection;
    }
    public String getSubwayDirection() {
        return this.subwayDirection;
    }

    //--- DATABASE MAPPING : subway_door_no ( VARCHAR ) 
    public void setSubwayDoorNo( String subwayDoorNo ) {
        this.subwayDoorNo = subwayDoorNo;
    }
    public String getSubwayDoorNo() {
        return this.subwayDoorNo;
    }

    //--- DATABASE MAPPING : location ( VARCHAR ) 
    public void setLocation( String location ) {
        this.location = location;
    }
    public String getLocation() {
        return this.location;
    }

    //--- DATABASE MAPPING : phone ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }

    //--- DATABASE MAPPING : post_code ( VARCHAR ) 
    public void setPostCode( String postCode ) {
        this.postCode = postCode;
    }
    public String getPostCode() {
        return this.postCode;
    }

    //--- DATABASE MAPPING : status ( SMALLINT ) 
    public void setStatus( Short status ) {
        this.status = status;
    }
    public Short getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : type_vehicle ( SMALLINT ) 
    public void setTypeVehicle( Short typeVehicle ) {
        this.typeVehicle = typeVehicle;
    }
    public Short getTypeVehicle() {
        return this.typeVehicle;
    }

    //--- DATABASE MAPPING : type_send ( SMALLINT ) 
    public void setTypeSend( Short typeSend ) {
        this.typeSend = typeSend;
    }
    public Short getTypeSend() {
        return this.typeSend;
    }

    //--- DATABASE MAPPING : type_register ( SMALLINT ) 
    public void setTypeRegister( Short typeRegister ) {
        this.typeRegister = typeRegister;
    }
    public Short getTypeRegister() {
        return this.typeRegister;
    }

    //--- DATABASE MAPPING : type_certificate ( SMALLINT ) 
    public void setTypeCertificate( Short typeCertificate ) {
        this.typeCertificate = typeCertificate;
    }
    public Short getTypeCertificate() {
        return this.typeCertificate;
    }

    //--- DATABASE MAPPING : image_name ( VARCHAR ) 
    public void setImageName( String imageName ) {
        this.imageName = imageName;
    }
    public String getImageName() {
        return this.imageName;
    }

    //--- DATABASE MAPPING : image_url ( VARCHAR ) 
    public void setImageUrl( String imageUrl ) {
        this.imageUrl = imageUrl;
    }
    public String getImageUrl() {
        return this.imageUrl;
    }

    //--- DATABASE MAPPING : register_date ( DATE ) 
    public void setRegisterDate( Date registerDate ) {
        this.registerDate = registerDate;
    }
    public Date getRegisterDate() {
        return this.registerDate;
    }

    //--- DATABASE MAPPING : approval_date ( DATE ) 
    public void setApprovalDate( Date approvalDate ) {
        this.approvalDate = approvalDate;
    }
    public Date getApprovalDate() {
        return this.approvalDate;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : reason ( VARCHAR ) 
    public void setReason( String reason ) {
        this.reason = reason;
    }
    public String getReason() {
        return this.reason;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfMileageHistory( List<MileageHistoryEntity> listOfMileageHistory ) {
        this.listOfMileageHistory = listOfMileageHistory;
    }
    public List<MileageHistoryEntity> getListOfMileageHistory() {
        return this.listOfMileageHistory;
    }

    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(serialNumber);
        sb.append("|");
        sb.append(busCompanyName);
        sb.append("|");
        sb.append(busNo);
        sb.append("|");
        sb.append(busNumber);
        sb.append("|");
        sb.append(subwayLineNo);
        sb.append("|");
        sb.append(subwayStationName);
        sb.append("|");
        sb.append(subwayDirection);
        sb.append("|");
        sb.append(subwayDoorNo);
        sb.append("|");
        sb.append(location);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(postCode);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(typeVehicle);
        sb.append("|");
        sb.append(typeSend);
        sb.append("|");
        sb.append(typeRegister);
        sb.append("|");
        sb.append(typeCertificate);
        sb.append("|");
        sb.append(imageName);
        sb.append("|");
        sb.append(imageUrl);
        sb.append("|");
        sb.append(registerDate);
        sb.append("|");
        sb.append(approvalDate);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(reason);
        return sb.toString(); 
    } 

}
