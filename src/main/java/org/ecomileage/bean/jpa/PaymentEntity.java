/*
 * Created on 20 thg 12 2017 ( Time 17:17:56 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "payment"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="payment")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PaymentEntity.countAll", query="SELECT COUNT(x) FROM PaymentEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class PaymentEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="money")
    private Integer    money        ;

    @Column(name="mileage_apply_id")
    private Integer    mileageApplyId ;

    @Column(name="bike_point")
    private Integer    bikePoint    ;

    @Column(name="type_money")
    private Short      typeMoney    ;

    @Column(name="type_use")
    private Short      typeUse      ;

    @Column(name="tranfer_point")
    private Integer    tranferPoint ;

    @Column(name="type_point")
    private Short      typePoint    ;

    @Column(name="previous_point")
    private Integer    previousPoint ;

    @Column(name="type_sponsor")
    private Short      typeSponsor  ;

    @Column(name="status", nullable=false)
    private Short      status       ;

    @Column(name="payment_method", length=50)
    private String     paymentMethod ;

    @Column(name="tid", length=500)
    private String     tid          ;

    @Column(name="reason", length=50)
    private String     reason       ;

    @Column(name="account_info")
    private String     accountInfo  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

    @Column(name="fullname", length=300)
    private String     fullname     ;

    @Column(name="phone", length=300)
    private String     phone        ;

    @Column(name="postcode", length=300)
    private String     postcode     ;

    @Column(name="address", length=300)
    private String     address      ;

    @Column(name="address_detail", length=300)
    private String     addressDetail ;

    @Column(name="email", length=300)
    private String     email        ;

	// "userId" (column "user_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="user_id", referencedColumnName="id")
    private UserEntity user        ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PaymentEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : money ( INT ) 
    public void setMoney( Integer money ) {
        this.money = money;
    }
    public Integer getMoney() {
        return this.money;
    }

    //--- DATABASE MAPPING : mileage_apply_id ( INT ) 
    public void setMileageApplyId( Integer mileageApplyId ) {
        this.mileageApplyId = mileageApplyId;
    }
    public Integer getMileageApplyId() {
        return this.mileageApplyId;
    }

    //--- DATABASE MAPPING : bike_point ( INT ) 
    public void setBikePoint( Integer bikePoint ) {
        this.bikePoint = bikePoint;
    }
    public Integer getBikePoint() {
        return this.bikePoint;
    }

    //--- DATABASE MAPPING : type_money ( SMALLINT ) 
    public void setTypeMoney( Short typeMoney ) {
        this.typeMoney = typeMoney;
    }
    public Short getTypeMoney() {
        return this.typeMoney;
    }

    //--- DATABASE MAPPING : type_use ( SMALLINT ) 
    public void setTypeUse( Short typeUse ) {
        this.typeUse = typeUse;
    }
    public Short getTypeUse() {
        return this.typeUse;
    }

    //--- DATABASE MAPPING : tranfer_point ( INT ) 
    public void setTranferPoint( Integer tranferPoint ) {
        this.tranferPoint = tranferPoint;
    }
    public Integer getTranferPoint() {
        return this.tranferPoint;
    }

    //--- DATABASE MAPPING : type_point ( SMALLINT ) 
    public void setTypePoint( Short typePoint ) {
        this.typePoint = typePoint;
    }
    public Short getTypePoint() {
        return this.typePoint;
    }

    //--- DATABASE MAPPING : previous_point ( INT ) 
    public void setPreviousPoint( Integer previousPoint ) {
        this.previousPoint = previousPoint;
    }
    public Integer getPreviousPoint() {
        return this.previousPoint;
    }

    //--- DATABASE MAPPING : type_sponsor ( SMALLINT ) 
    public void setTypeSponsor( Short typeSponsor ) {
        this.typeSponsor = typeSponsor;
    }
    public Short getTypeSponsor() {
        return this.typeSponsor;
    }

    //--- DATABASE MAPPING : status ( SMALLINT ) 
    public void setStatus( Short status ) {
        this.status = status;
    }
    public Short getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : payment_method ( VARCHAR ) 
    public void setPaymentMethod( String paymentMethod ) {
        this.paymentMethod = paymentMethod;
    }
    public String getPaymentMethod() {
        return this.paymentMethod;
    }

    //--- DATABASE MAPPING : tid ( VARCHAR ) 
    public void setTid( String tid ) {
        this.tid = tid;
    }
    public String getTid() {
        return this.tid;
    }

    //--- DATABASE MAPPING : reason ( VARCHAR ) 
    public void setReason( String reason ) {
        this.reason = reason;
    }
    public String getReason() {
        return this.reason;
    }

    //--- DATABASE MAPPING : account_info ( TEXT ) 
    public void setAccountInfo( String accountInfo ) {
        this.accountInfo = accountInfo;
    }
    public String getAccountInfo() {
        return this.accountInfo;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : fullname ( VARCHAR ) 
    public void setFullname( String fullname ) {
        this.fullname = fullname;
    }
    public String getFullname() {
        return this.fullname;
    }

    //--- DATABASE MAPPING : phone ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }

    //--- DATABASE MAPPING : postcode ( VARCHAR ) 
    public void setPostcode( String postcode ) {
        this.postcode = postcode;
    }
    public String getPostcode() {
        return this.postcode;
    }

    //--- DATABASE MAPPING : address ( VARCHAR ) 
    public void setAddress( String address ) {
        this.address = address;
    }
    public String getAddress() {
        return this.address;
    }

    //--- DATABASE MAPPING : address_detail ( VARCHAR ) 
    public void setAddressDetail( String addressDetail ) {
        this.addressDetail = addressDetail;
    }
    public String getAddressDetail() {
        return this.addressDetail;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(money);
        sb.append("|");
        sb.append(mileageApplyId);
        sb.append("|");
        sb.append(bikePoint);
        sb.append("|");
        sb.append(typeMoney);
        sb.append("|");
        sb.append(typeUse);
        sb.append("|");
        sb.append(tranferPoint);
        sb.append("|");
        sb.append(typePoint);
        sb.append("|");
        sb.append(previousPoint);
        sb.append("|");
        sb.append(typeSponsor);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(paymentMethod);
        sb.append("|");
        sb.append(tid);
        sb.append("|");
        sb.append(reason);
        // attribute 'accountInfo' not usable (type = String Long Text)
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(fullname);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(postcode);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(addressDetail);
        sb.append("|");
        sb.append(email);
        return sb.toString(); 
    } 

}
