/*
 * Created on 21 thg 12 2017 ( Time 13:46:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.ecomileage.bean.jpa;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "sponsor"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="sponsor")
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="SponsorEntity.countAll", query="SELECT COUNT(x) FROM SponsorEntity x" )
} )
@DynamicInsert
@DynamicUpdate
public class SponsorEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="membership_fee")
    private Integer    membershipFee ;

    @Column(name="fullname", length=200)
    private String     fullname     ;

    @Column(name="phone", length=20)
    private String     phone        ;

    @Column(name="email", length=300)
    private String     email        ;

    @Column(name="address", length=300)
    private String     address      ;

    @Column(name="address_detail", length=300)
    private String     addressDetail ;

    @Column(name="postcode", length=200)
    private String     postcode     ;

    @Column(name="account_number", length=50)
    private String     accountNumber ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="sponsor_date")
    private Date       sponsorDate  ;

    @Column(name="account_name", length=200)
    private String     accountName  ;

    @Column(name="is_delete", nullable=false)
    private Boolean    isDelete     ;

    @Column(name="day_of_birth", length=50)
    private String     dayOfBirth   ;

    @Column(name="is_revice_receipt", nullable=false)
    private Boolean    isReviceReceipt ;

    @Column(name="revice_user_name", length=500)
    private String     reviceUserName ;

    @Column(name="identity_card_number", length=500)
    private String     identityCardNumber ;

    @Temporal(TemporalType.DATE)
    @Column(name="delete_date")
    private Date       deleteDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

	// "userId" (column "user_id") is not defined by itself because used as FK in a link 
	// "membershipFeeTypeId" (column "membership_fee_type_id") is not defined by itself because used as FK in a link 
	// "membershipFeeId" (column "membership_fee_id") is not defined by itself because used as FK in a link 
	// "bankId" (column "bank_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="membership_fee_id", referencedColumnName="id")
    private CategoryEntity category2   ;

    @ManyToOne
    @JoinColumn(name="membership_fee_type_id", referencedColumnName="id")
    private CategoryEntity category    ;

    @ManyToOne
    @JoinColumn(name="bank_id", referencedColumnName="id")
    private CategoryEntity category3   ;

    @ManyToOne
    @JoinColumn(name="user_id", referencedColumnName="id")
    private UserEntity user        ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public SponsorEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : membership_fee ( INT ) 
    public void setMembershipFee( Integer membershipFee ) {
        this.membershipFee = membershipFee;
    }
    public Integer getMembershipFee() {
        return this.membershipFee;
    }

    //--- DATABASE MAPPING : fullname ( VARCHAR ) 
    public void setFullname( String fullname ) {
        this.fullname = fullname;
    }
    public String getFullname() {
        return this.fullname;
    }

    //--- DATABASE MAPPING : phone ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : address ( VARCHAR ) 
    public void setAddress( String address ) {
        this.address = address;
    }
    public String getAddress() {
        return this.address;
    }

    //--- DATABASE MAPPING : address_detail ( VARCHAR ) 
    public void setAddressDetail( String addressDetail ) {
        this.addressDetail = addressDetail;
    }
    public String getAddressDetail() {
        return this.addressDetail;
    }

    //--- DATABASE MAPPING : postcode ( VARCHAR ) 
    public void setPostcode( String postcode ) {
        this.postcode = postcode;
    }
    public String getPostcode() {
        return this.postcode;
    }

    //--- DATABASE MAPPING : account_number ( VARCHAR ) 
    public void setAccountNumber( String accountNumber ) {
        this.accountNumber = accountNumber;
    }
    public String getAccountNumber() {
        return this.accountNumber;
    }

    //--- DATABASE MAPPING : sponsor_date ( DATE ) 
    public void setSponsorDate( Date sponsorDate ) {
        this.sponsorDate = sponsorDate;
    }
    public Date getSponsorDate() {
        return this.sponsorDate;
    }

    //--- DATABASE MAPPING : account_name ( VARCHAR ) 
    public void setAccountName( String accountName ) {
        this.accountName = accountName;
    }
    public String getAccountName() {
        return this.accountName;
    }

    //--- DATABASE MAPPING : is_delete ( BIT ) 
    public void setIsDelete( Boolean isDelete ) {
        this.isDelete = isDelete;
    }
    public Boolean getIsDelete() {
        return this.isDelete;
    }

    //--- DATABASE MAPPING : day_of_birth ( VARCHAR ) 
    public void setDayOfBirth( String dayOfBirth ) {
        this.dayOfBirth = dayOfBirth;
    }
    public String getDayOfBirth() {
        return this.dayOfBirth;
    }

    //--- DATABASE MAPPING : is_revice_receipt ( BIT ) 
    public void setIsReviceReceipt( Boolean isReviceReceipt ) {
        this.isReviceReceipt = isReviceReceipt;
    }
    public Boolean getIsReviceReceipt() {
        return this.isReviceReceipt;
    }

    //--- DATABASE MAPPING : revice_user_name ( VARCHAR ) 
    public void setReviceUserName( String reviceUserName ) {
        this.reviceUserName = reviceUserName;
    }
    public String getReviceUserName() {
        return this.reviceUserName;
    }

    //--- DATABASE MAPPING : identity_card_number ( VARCHAR ) 
    public void setIdentityCardNumber( String identityCardNumber ) {
        this.identityCardNumber = identityCardNumber;
    }
    public String getIdentityCardNumber() {
        return this.identityCardNumber;
    }

    //--- DATABASE MAPPING : delete_date ( DATE ) 
    public void setDeleteDate( Date deleteDate ) {
        this.deleteDate = deleteDate;
    }
    public Date getDeleteDate() {
        return this.deleteDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setCategory2( CategoryEntity category2 ) {
        this.category2 = category2;
    }
    public CategoryEntity getCategory2() {
        return this.category2;
    }

    public void setCategory( CategoryEntity category ) {
        this.category = category;
    }
    public CategoryEntity getCategory() {
        return this.category;
    }

    public void setCategory3( CategoryEntity category3 ) {
        this.category3 = category3;
    }
    public CategoryEntity getCategory3() {
        return this.category3;
    }

    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(membershipFee);
        sb.append("|");
        sb.append(fullname);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(addressDetail);
        sb.append("|");
        sb.append(postcode);
        sb.append("|");
        sb.append(accountNumber);
        sb.append("|");
        sb.append(sponsorDate);
        sb.append("|");
        sb.append(accountName);
        sb.append("|");
        sb.append(isDelete);
        sb.append("|");
        sb.append(dayOfBirth);
        sb.append("|");
        sb.append(isReviceReceipt);
        sb.append("|");
        sb.append(reviceUserName);
        sb.append("|");
        sb.append(identityCardNumber);
        sb.append("|");
        sb.append(deleteDate);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(createDate);
        return sb.toString(); 
    } 

}
