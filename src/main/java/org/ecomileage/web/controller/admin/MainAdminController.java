/*
 * Created on 2 thg 10 2017 ( Time 14:49:22 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.ecomileage.web.controller.admin;


import java.util.Calendar;
import javax.annotation.Resource;
import javax.servlet.http.HttpSession;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
//--- Common classes
import org.ecomileage.web.common.AbstractController;
import org.ecomileage.web.common.ApplicationDefine;
import org.ecomileage.bean.jpa.CampaignEntity;
//--- Entities
import org.ecomileage.business.service.CampaignService;
import org.ecomileage.business.service.MileageHistoryService;
//--- Services 
import org.ecomileage.business.service.UserService;

@Controller
@RequestMapping("/auth")
public class MainAdminController extends AbstractController {
	private static String nav = "main";
	@Resource
	private UserService userService;
	@Resource
	private CampaignService campaignService;
	@Resource
	private MileageHistoryService mileageHistoryService;

	/*
	 * Page name: campaign
	 * Method   : GET
	 * Purpose  : get all data
	 * */
	@RequestMapping(value ="/campaign", method = RequestMethod.GET)
	public String campaign(
			Model model,HttpSession session) {
		Calendar cal = Calendar.getInstance();
		Integer year = cal.get(Calendar.YEAR);
		Short status[] = new Short[4];
		status[0] = ApplicationDefine.MileageHistory_Status.NotSendRequest.getCode();
		status[1] = ApplicationDefine.MileageHistory_Status.RecivePoint.getCode();
		status[2] = ApplicationDefine.MileageHistory_Status.SendRequestAndNotConfirmed.getCode();
		status[3] = ApplicationDefine.MileageHistory_Status.RegisterAgain.getCode();
		CampaignEntity c =  campaignService.findByYear(year);
		model.addAttribute("c", c);
		
		Long totalUserInYear = userService.countUserJoinByYear(year);
		Integer totalGoalUser = c.getTotalGoalUser();
		
		model.addAttribute("totalFactUserInYear", totalUserInYear);
		model.addAttribute("totalFactUser", userService.countUserActive());
		Float ratioUser = (totalUserInYear/(float)totalGoalUser)*100;
		model.addAttribute("ratioUser", Math.round(ratioUser * 10d)/10d );
		
		Integer totalGoalCO2 = Math.round(c.getTotalGoalCo2());
		Long totalCO2InYear = mileageHistoryService.countReduceCo2_ByYear(year, status);
		Long totalCO2 = mileageHistoryService.countReduceCo2();
		model.addAttribute("totalFactReduceCO2InYear",Math.round(totalCO2InYear));
		model.addAttribute("totalFactReduceCO2",Math.round(totalCO2) );
		model.addAttribute("totalGoalCo2", totalGoalCO2);
		Float ratioCO2 = (totalCO2InYear/(float)totalGoalCO2)*100;
		model.addAttribute("ratioCO2", Math.round(ratioCO2 * 10d)/10d );
		model.addAttribute("nav", nav );
		
		return getView();
	}
	
	/*
	 * Page name: campaign
	 * Method   : POST
	 * Purpose  : change information when click button in campaign page
	 * */
	@RequestMapping(value ="/campaign", method = RequestMethod.POST)
	public String campaignPost(
			@RequestParam(defaultValue="") Integer totalGoalUser,
			@RequestParam(defaultValue="") Float totalGoalCo2,
			@RequestParam(defaultValue="0") Integer editUserGoal,
			@RequestParam(defaultValue="0") Integer editCo2Goal,
			Model model,HttpSession session) {
		Calendar cal = Calendar.getInstance();
		Integer year = cal.get(Calendar.YEAR);
		CampaignEntity c =  campaignService.findByYear(year);
		if(editUserGoal == 1) {
			c.setTotalGoalUser(totalGoalUser);
		}
		if(editCo2Goal == 1) {
			c.setTotalGoalCo2(totalGoalCo2);
		}
		campaignService.update(c);
		return redirectView();
	}

}
