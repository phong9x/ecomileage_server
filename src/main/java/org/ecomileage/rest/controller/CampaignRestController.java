/*
 * Created on 14 thg 10 2017 ( Time 17:41:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.ecomileage.rest.controller;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.text.NumberFormat;
import java.util.Calendar;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.json.simple.JSONObject;
import org.json.simple.parser.*;
import org.springframework.data.domain.Page;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.ecomileage.bean.UserItem;
import org.ecomileage.bean.Campaign;
import org.ecomileage.bean.User;
import org.ecomileage.bean.jpa.CampaignEntity;
import org.ecomileage.bean.jpa.NoticeEntity;
import org.ecomileage.business.service.CampaignService;
import org.ecomileage.business.service.MileageHistoryService;
import org.ecomileage.business.service.NoticeService;
import org.ecomileage.business.service.UserService;
import org.ecomileage.rest.common.AbstractRestController;
import org.ecomileage.rest.common.AuthorizationToken;
import org.ecomileage.web.common.utils.DataUtils;
import org.ecomileage.web.common.utils.EncryptionUtils;
import org.ecomileage.web.common.ApplicationDefine;
import org.ecomileage.web.common.Login;
/**
 * Spring MVC controller for 'Campaign' management.
 */
@RequestMapping("/campaign")
@Controller
public class CampaignRestController extends AbstractRestController{

	@Resource
	private CampaignService campaignService;
	@Resource
	private NoticeService noticeService;
	@Resource
	private MileageHistoryService mileageHistoryService;
	@Resource
	private UserService userService;
	
	// main screen
	@RequestMapping( value="/main",
			method = {RequestMethod.POST, RequestMethod.GET},
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public HashMap<String, Object> findAll(
			@RequestHeader(value="token",required = false) String token
			) {
		UserItem userItem = EncryptionUtils.jwtParse(token, UserItem.class);
		try {
			User user= userService.findById(userItem.getId());
			HashMap<String, Object> ret = new HashMap<>();
			Short status[] = new Short[1];
			status[0] = ApplicationDefine.MileageHistory_Status.RecivePoint.getCode();
			Short[] type = new Short[1];
			type[0] = ApplicationDefine.MileageHistory_Type.Bike.getCode();
			
			Page<NoticeEntity> listNotice = noticeService.listPaging(1, 3);
			ret.put("listNotice", listNotice.getContent());
			ret.put("username",user.getUsername() );
			ret.put("fullname",user.getFullname() );
			ret.put("userId",user.getId() );
			NumberFormat numberFormat = NumberFormat.getNumberInstance(Locale.US);
			ret.put("totalMember",  numberFormat.format(userService.countUserActive()));
			ret.put("totalCO2", numberFormat.format(mileageHistoryService.countReduceCo2()));
			Float totalMileage = mileageHistoryService.countTotalMileageByUserId(user.getId(),type);
			ret.put("totalTree",numberFormat.format(DataUtils.calculateTree(totalMileage)));
			return SUCCESS(ret);
		} catch (Exception e) {
			e.printStackTrace();
			return ERROR("HAVE ERROR: "+e);
		}
	} 

	
}



