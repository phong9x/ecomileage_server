/*
 * Created on 20 thg 11 2017 ( Time 13:23:27 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.ecomileage.rest.controller;
import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;
import org.springframework.data.domain.Page;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.ecomileage.bean.Notice;
import org.ecomileage.bean.jpa.NoticeEntity;
import org.ecomileage.business.service.NoticeService;
import org.ecomileage.rest.common.AbstractRestController;
import org.ecomileage.web.common.ApplicationDefine;
/**
 * Spring MVC controller for 'Notice' management.
 */
@RequestMapping("/notice")
@Controller
public class NoticeRestController extends AbstractRestController{

	@Resource
	private NoticeService noticeService;
	
	@RequestMapping( value="/list",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public HashMap<String, Object> notices(HttpSession session){
		try {
			HashMap<String, Object> ret = new HashMap<>();
			List<NoticeEntity> list = noticeService.listByType(ApplicationDefine.Notice_Type.Notice.getCode());
			ret.put("notices", list);
			return SUCCESS(ret);
		} catch (Exception e) {
			e.printStackTrace();
			return ERROR("HAVE ERROR: "+e);
		}
	}
	// screen
	@RequestMapping( value="/detail", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public HashMap<String, Object> dataBackup(
			HttpSession session,
			@RequestParam (value="id", required=true) Integer id){
		try {
			NoticeEntity notice =  noticeService.findOne(id);
			if (notice == null) {
				return FAIL();
			}
			return SUCCESS(notice);
		} catch (Exception e) {
			e.printStackTrace();
			return ERROR("HAVE ERROR: "+e);
		}
	}
	
	@RequestMapping( value="/bike",
			method = {RequestMethod.POST, RequestMethod.GET},
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public HashMap<String, Object> findAll(
	@RequestHeader(value="token",required=false) String token,
	@RequestParam Integer page
	) {
		//UserItem userItem = EncryptionUtils.jwtParse(token, UserItem.class);
		try {
			Page<NoticeEntity> listPage = noticeService.findByType(ApplicationDefine.Notice_Type.BikeNews.getCode(), page, 10);
			for (NoticeEntity noticeEntity : listPage.getContent()) {
				noticeEntity.setContent(null);
			}
			HashMap<String, Object> ret =new HashMap<>();
			ret.put("totalPages", listPage.getTotalPages());
			ret.put("list", listPage.getContent());
			ret.put("currentPage", page);
			return SUCCESS(ret);
		} catch (Exception e) {
			e.printStackTrace();
			return ERROR("HAVE ERROR: "+e);
		}
	} 
	
	
	@RequestMapping( value="/bike-detail",
			method = {RequestMethod.POST, RequestMethod.GET},
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public HashMap<String, Object> findAll(
	@RequestParam Integer id
	) {
		//UserItem userItem = EncryptionUtils.jwtParse(token, UserItem.class);
		try {
			
			HashMap<String, Object> ret =new HashMap<>();
			Notice n = noticeService.findById(id);
			return SUCCESS(n);
		} catch (Exception e) {
			e.printStackTrace();
			return ERROR("HAVE ERROR: "+e);
		}
	} 
	
}



